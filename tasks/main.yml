---
# tasks file for rails_app

- name: Include OS specific configuration values
  include_vars:
    dir: "{{ role_path }}/vars"
    files_matching: "\
      {{ ansible_distribution | lower }}-{{ ansible_distribution_version }}.yml|\
      {{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yml|\
      {{ ansible_distribution | lower }}.yml|{{ ansible_os_family | lower }}.yml|\
      {{ ansible_system | lower }}.yml"

- name: Install required packages
  package:
    name: "{{ rails_app_packages | union(rails_app_packages_extra) }}"
  become: true

- name: Create rails app system user
  user:
    name: "{{ rails_app_user }}"
    home: "{{ rails_app_user_home }}"
    comment: Account used by {{ rails_app_name }} puma server
  become: true

- name: Ensure deploy path exists
  file:
    path: "{{ rails_app_deploy_path }}"
    state: directory
    owner: "{{ rails_app_user }}"
    group: "{{ rails_app_group }}"
    mode: 0755

- import_tasks: "{{ rails_app_db_adapter }}.yml"
  become: true

- name: Read rubygems path for application user
  command: ruby -r rubygems -e 'puts Gem.user_dir'
  args:
    warn: false
  register: rubygems_path_output
  become: true
  become_user: "{{ rails_app_user }}"
  check_mode: false
  changed_when: false
  tags: always

- name: Set fact for rubygems path
  set_fact:
    rubygems_path: "{{ rubygems_path_output.stdout | trim }}"
  tags: always

- name: Install rake gem
  gem:
    name: "rake"
    version: "{{ rails_app_rake | default(omit) }}"
    state: present
  become: true
  become_user: "{{ rails_app_user }}"

- name: Install bundler gem
  gem:
    name: "bundler"
    version: "{{ rails_app_bundler | default(omit) }}"
    state: present
  become: true
  become_user: "{{ rails_app_user }}"

- name: Ensure configuration path exists
  file:
    path: "{{ rails_app_config_path }}"
    state: directory
    owner: "{{ rails_app_user }}"
    group: "{{ rails_app_group }}"
    mode: 0755

- name: Ensure logs path exists
  file:
    path: "{{ rails_app_log_path }}"
    state: directory
    owner: "{{ rails_app_user }}"
    group: "{{ rails_app_group }}"
    mode: 0755

- name: Ensure storage path exists
  file:
    path: "{{ rails_app_files_path }}"
    state: directory
    owner: "{{ rails_app_user }}"
    group: "{{ rails_app_proxy_group }}"
    mode: 0755

- name: Create database configuration file
  copy:
    dest: "{{ rails_app_config_path_db }}"
    content: "{{ rails_app_db_config | to_nice_yaml }}"
    mode: 0644
  become: true
  become_user: "{{ rails_app_user }}"

- name: Create puma configuration file
  template:
    src: puma.rb.j2
    dest: "{{ rails_app_config_path_puma }}"
    mode: 0644
  become: true
  become_user: "{{ rails_app_user }}"
  notify: restart {{ rails_app_name }}

- name: Create puma systemd service file for application
  template:
    src: puma.service.j2
    dest: "/etc/systemd/system/{{ rails_app_name }}.service"
    mode: 0644
  become: true
  when: ansible_os_family == 'Debian'

- name: Create puma OpenRC service file for application
  template:
    src: puma.openrc.j2
    dest: "/etc/init.d/{{ rails_app_name }}"
    mode: 0755
  become: true
  when: ansible_os_family == 'Alpine'

- import_tasks: "{{ rails_app_proxy }}.yml"
  become: true

- name: Create application's proxy configuration folders
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ rails_app_proxy_user }}"
    group: "{{ rails_app_proxy_group }}"
    mode: 0755
  loop:
    - "{{ rails_app_proxy_before_config_path }}"
    - "{{ rails_app_proxy_after_config_path }}"

- name: Create proxy configuration file
  template:
    src: "{{ rails_app_proxy }}.conf.j2"
    dest: "{{ rails_app_proxy_site_config_path }}"
    mode: 0644
  notify: restart {{ rails_app_proxy }}

- import_tasks: "{{ rails_app_proxy }}.yml"
  become: true

- import_tasks: "checkout.yml"
  when: rails_app_repo_url is defined
  become: true
  become_user: "{{ rails_app_user }}"
  tags: rails_app_checkout

- name: Create `logrotate` configuration file
  template:
    src: logrotate.j2
    dest: "{{ rails_app_logrotate_path }}"
    mode: 0644
  become: true

- name: Enable application service
  service:
    name: "{{ rails_app_name }}"
    enabled: true
  become: true
